{"version":3,"sources":["api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["request","url","fetch","then","response","ok","Error","status","statusText","json","getUserById","id","TodoList","state","todos","query","showTodosValue","a","this","setState","props","selectUser","selectedUserId","visibleTodos","filter","todo","title","toLowerCase","includes","completed","className","type","value","onChange","event","target","map","userId","classnames","htmlFor","readOnly","checked","onClick","React","Component","CurrentUser","currentUser","loadUser","currentUserId","prevProps","clearSelectedUser","name","email","phone","App","switchUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b1286bc.chunk.js","sourcesContent":["const API_URL = 'https://mate.academy/students-api';\n\nconst request = (url: string) => {\n  return fetch(`${API_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getTodos = () => {\n  return request('/todos');\n};\n\nexport const getUserById = (id: number) => {\n  return request(`/users/${id}`);\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { getTodos } from '../../api/api';\nimport { Todo } from '../../react-app-env';\nimport './TodoList.scss';\n\ntype Props = {\n  selectedUserId: number,\n  selectUser(userId: number): void,\n};\n\ntype State = {\n  todos: Todo[],\n  query: string,\n  showTodosValue: string,\n};\n\nexport class TodoList extends React.Component <Props, State> {\n  state: State = {\n    todos: [],\n    query: '',\n    showTodosValue: 'all',\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  render() {\n    const { selectUser, selectedUserId } = this.props;\n    const { query, todos, showTodosValue } = this.state;\n    const visibleTodos = todos.filter(todo => {\n      if (!todo.title.toLowerCase().includes(query.toLowerCase())) {\n        return false;\n      }\n\n      if (showTodosValue === 'active' && todo.completed) {\n        return false;\n      }\n\n      return !(showTodosValue === 'completed' && !todo.completed);\n    });\n\n    return (\n      <div className=\"TodoList\">\n        <h2 className=\"TodoList__header\">\n          Todos:\n        </h2>\n\n        <div className=\"TodoList__container\">\n          <input\n            type=\"text\"\n            value={this.state.query}\n            onChange={event => this.setState({ query: event.target.value })}\n          />\n          <select\n            onChange={event => this.setState({ showTodosValue: event.target.value })}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => {\n              const {\n                id, title, userId, completed,\n              } = todo;\n\n              return (\n                <li\n                  key={id}\n                  className={classnames('TodoList__item', `TodoList__item--${\n                    completed ? 'checked' : 'unchecked'\n                  }`)}\n                >\n                  <label htmlFor={title}>\n                    <input type=\"checkbox\" id={title} readOnly checked={completed} />\n                    <p>{title}</p>\n                  </label>\n                  <button\n                    type=\"button\"\n                    className={classnames('TodoList__user-button', 'button',\n                      `TodoList__user-button--${selectedUserId === userId ? 'selected' : 'unselected'\n                      }`)}\n                    onClick={() => selectUser(todo.userId)}\n                  >\n                    {`User#${userId}`}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { getUserById } from '../../api/api';\nimport { User } from '../../react-app-env';\nimport './CurrentUser.scss';\n\ntype Props = {\n  currentUserId: number,\n  clearSelectedUser: () => void,\n};\n\ntype State = {\n  currentUser: User | null,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    currentUser: null,\n  };\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.currentUserId !== this.props.currentUserId) {\n      this.loadUser();\n    }\n  }\n\n  loadUser = () => {\n    getUserById(this.props.currentUserId)\n      .then(currentUser => {\n        this.setState({ currentUser });\n      });\n  };\n\n  render() {\n    const { currentUser } = this.state;\n    const { clearSelectedUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${currentUser?.id}`}</span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{currentUser?.name}</h3>\n        <p className=\"CurrentUser__email\">{currentUser?.email}</p>\n        <p className=\"CurrentUser__phone\">{currentUser?.phone}</p>\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear button\"\n          onClick={clearSelectedUser}\n        >\n          Hide User\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  selectedUserId: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n  };\n\n  switchUser = async (id: number) => {\n    const { selectedUserId } = this.state;\n\n    if (selectedUserId !== id) {\n      this.setState({\n        selectedUserId: id,\n      });\n    }\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n    const { switchUser } = this;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            selectedUserId={selectedUserId}\n            selectUser={switchUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                currentUserId={selectedUserId}\n                clearSelectedUser={() => {\n                  this.setState({ selectedUserId: 0 });\n                }}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}